import Link from 'next/link'
import { useEffect, useState } from 'react'
import { FiEye, FiEyeOff } from 'react-icons/fi'

const TimeTracker = ({
    test,
    handleEndTest,
    answers,
    testResult,
}: {
    test: any
    handleEndTest: () => void
    answers: any
    testResult: any
}) => {
    const [isOpen, setIsOpen] = useState(false)
    const [notProvidedAnsw, setNotProvidedAnsw] = useState<any>([])
    const [timeLeft, setTimeLeft] = useState<number>(0)
    const [showTime, setShowTime] = useState(true)
    const [showAnswerModal, setShowAnswerModal] = useState(false)
    const timeLeftFromStorage = localStorage.getItem('time-left')

    const handleSetNotProvidedAnsw = () => {
        setNotProvidedAnsw([])
        let answersNotProvided: any = []
        test?.tasks?.map((task: any) => {
            const hasAnswer = answers.find(
                (answ: any) => answ.taskId === task.id
            )
            if (!hasAnswer) {
                answersNotProvided.push(task)
            }
        })
        setNotProvidedAnsw(answersNotProvided)
    }

    useEffect(() => {
        if (test !== null && !timeLeftFromStorage) {
            setTimeLeft(test?.timeLimit * 60 || 0)
        }
    }, [test])

    useEffect(() => {
        const interval = setInterval(() => {
            setTimeLeft((prev) => prev - 1)
        }, 1000)

        if (timeLeft === 1) {
            setShowAnswerModal(true)
            handleEndTest()
        }

        return () => clearInterval(interval)
    }, [timeLeft])

    const formatTime = (seconds: number) => {
        const safeSeconds = Math.max(0, seconds)
        const min = Math.floor(safeSeconds / 60)
        const sec = safeSeconds % 60
        return `${min}:${sec < 10 ? '0' : ''}${sec}`
    }

    const toggleTime = () => {
        setShowTime(!showTime)
    }

    useEffect(() => {
        if (timeLeftFromStorage) {
            const parsedTimeLeft = JSON.parse(timeLeftFromStorage)
            setTimeLeft(parsedTimeLeft)
        }
    }, [])

    useEffect(() => {
        const timer = setTimeout(() => {
            if (timeLeft > 0) {
                localStorage.setItem('time-left', JSON.stringify(timeLeft))
            }
        }, 1000)

        return () => clearTimeout(timer)
    }, [timeLeft])

    useEffect(() => {
        handleSetNotProvidedAnsw()
    }, [isOpen, answers])

    return (
        <div className="w-full bg-[#E3E2E2] shadow-md flex items-start">
            <div className="self-stretch bg-rose-600 w-2"></div>
            <div className="w-full px-15">
                <p className="mb-6 mt-4 text-black font-medium text-[18px]">
                    {test.title} –æ–±–º–µ–∂–µ–Ω–∏–π —É —á–∞—Å—ñ. –¢–∞–π–º–µ—Ä –ø—Ä–∞–≤–æ—Ä—É—á –ø–æ–∫–∞–∑—É—î,
                    —Å–∫—ñ–ª—å–∫–∏ —Ö–≤–∏–ª–∏–Ω –∑–∞–ª–∏—à–∏–ª–æ—Å—è –¥–æ –∫—ñ–Ω—Ü—è —Ä–æ–±–æ—Ç–∏. –í–∏–±—Ä–∞–≤—à–∏
                    –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –∑–∞–≤–¥–∞–Ω–Ω—è, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Ç–∏—Å–Ω—É—Ç–∏ –Ω–∞ "–ó–±–µ—Ä–µ–≥—Ç–∏
                    –≤—ñ–¥–ø–æ–≤—ñ–¥—å" –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è. –Ø–∫—â–æ –í–∏ —Ü—å–æ–≥–æ –Ω–µ –∑—Ä–æ–±–∏—Ç–µ,
                    –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–µ –±—É–¥–µ –∑–±–µ—Ä–µ–∂–µ–Ω–æ —ñ –∑–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ. –ü–µ—Ä—à –Ω—ñ–∂ –Ω–∞—Ç–∏—Å–Ω—É—Ç–∏
                    –Ω–∞ "–ó–∞–≤–µ—Ä—à–∏—Ç–∏ —Ä–æ–±–æ—Ç—É –Ω–∞–¥ —Ç–µ—Å—Ç–æ–º", –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ, —á–∏ –∑–±–µ—Ä–µ–≥–ª–∏ –≤—Å—ñ
                    –Ω–∞–¥–∞–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ.
                </p>
                <div className="flex gap-6 items-center justify-end mb-6">
                    <button
                        className="bg-rose-600 text-white px-3 py-1 rounded-[21px] hover:bg-rose-700 font-semibold"
                        onClick={() => setIsOpen(true)}
                    >
                        –ó–∞–≤–µ—Ä—à–∏—Ç–∏ —Ä–æ–±–æ—Ç—É –Ω–∞–¥ —Ç–µ—Å—Ç–æ–º
                    </button>
                    <div className="flex gap-2 items-center">
                        <p className="text-rose-600">
                            {showTime && `${formatTime(timeLeft)}`}
                        </p>
                        <div
                            onClick={toggleTime}
                            className="p-1 bg-rose-600 hover:bg-rose-700"
                        >
                            {showTime ? (
                                <FiEyeOff size={16} color="white" />
                            ) : (
                                <FiEye size={16} color="white" />
                            )}
                        </div>
                    </div>
                </div>
            </div>
            {isOpen && (
                <div className="fixed inset-0 bg-black/60 z-[1000] flex items-center justify-center ">
                    <div className="bg-[#FFF] p-6 rounded-md w-fit max-w-[80%]">
                        <div className="bg-gray-200 border-2 border-gray-300 p-10 w-fit">
                            <h2 className="font-semibold text-[22px]">
                                –í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ –±–∞–∂–∞—î—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç–∏ —Ä–æ–±–æ—Ç—É –Ω–∞–¥
                                —Ç–µ—Å—Ç–æ–º?
                            </h2>
                            <p className="text-[18px] mb-4">
                                –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –í–∏ –Ω–∞—Ç–∏—Å–ª–∏ –Ω–∞ "–ó–±–µ—Ä–µ–≥—Ç–∏
                                –≤—ñ–¥–ø–æ–≤—ñ–¥—å" –±—ñ–ª—è –∫–æ–∂–Ω–æ–≥–æ –≤–∏–∫–æ–Ω–∞–Ω–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è.–í–∏
                                –º–æ–∂–µ—Ç–µ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –±—É–¥—å-—è–∫–æ–≥–æ —ñ –Ω–∞–¥–∞—Ç–∏ —Ç–∞/–∞–±–æ
                                –∑–±–µ—Ä–µ–≥—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å. –ü—ñ—Å–ª—è –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –Ω–∞ "–¢–∞–∫,
                                –∑–∞–≤–µ—Ä—à–∏—Ç–∏ —Ä–æ–±–æ—Ç—É" –±—É–¥—É—Ç—å –∑–∞—Ä–∞—Ö–æ–≤–∞–Ω—ñ —Ç—ñ–ª—å–∫–∏
                                –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ, –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –∑–∞–≤–¥–∞–Ω—å –±—É–¥–µ
                                –Ω–µ–º–æ–∂–ª–∏–≤–æ.
                            </p>
                            <div className="flex items-center gap-6">
                                <button
                                    className="border border-gray-400 text-gray-700 px-4 py-2 rounded hover:bg-gray-100 font-medium"
                                    onClick={() => {
                                        handleEndTest()
                                        setIsOpen(false)
                                        setShowAnswerModal(true)
                                    }}
                                >
                                    –¢–∞–∫, –∑–∞–≤–µ—Ä—à–∏—Ç–∏ —Ä–æ–±–æ—Ç—É
                                </button>
                                <button
                                    className="bg-rose-600 text-white px-4 py-2 rounded hover:bg-rose-700 font-medium"
                                    onClick={() => setIsOpen(false)}
                                >
                                    –ù—ñ, –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è{' '}
                                </button>
                            </div>
                        </div>
                        {notProvidedAnsw.length > 0 && (
                            <div className="bg-gray-200 border-3 border-red-600 p-4 px-10 w-full">
                                <p className="font-semibold text-[22px]">
                                    –ù–µ –Ω–∞–¥–∞–Ω–æ —Ç–∞/–∞–±–æ –Ω–µ –∑–∞–≤–µ—Ä—à–µ—Ä—à–µ–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è
                                </p>
                                <p className="text-[18px] flex">
                                    –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞:{' '}
                                    {notProvidedAnsw.map((answ: any) => (
                                        <span
                                            className="ml-1"
                                            key={`${answ.id}-${answ.number}`}
                                        >
                                            {' '}
                                            –ó–∞–≤–¥–∞–Ω–Ω—è: {answ.number},{' '}
                                        </span>
                                    ))}
                                </p>
                            </div>
                        )}
                    </div>
                </div>
            )}
            {showAnswerModal && (
                <div className="fixed inset-0 bg-black/60 z-[1000] flex items-center justify-center ">
                    <div className="bg-[#FFF] p-6 rounded-md w-fit max-w-[80%]">
                        <div className="bg-gray-200 border-2 border-gray-300 p-10 w-full">
                            <h2 className="font-semibold text-[22px]">
                                –í–∏ –∑–∞–≤–µ—Ä—à–∏–ª–∏ —Ä–æ–±–æ—Ç—É –Ω–∞–¥ —Ç–µ—Å—Ç–æ–º.
                            </h2>
                            <p className="text-[18px] mb-4">
                                {(() => {
                                    const percentage =
                                        testResult.totalScore /
                                        testResult.maxScore

                                    if (percentage === 1) {
                                        return '–Ü–¥–µ–∞–ª—å–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –í–∏ ‚Äì —Å–ø—Ä–∞–≤–∂–Ω—ñ–π –≥–µ–Ω—ñ–π —Ü—ñ—î—ó —Ç–µ–º–∏! üíØ'
                                    } else if (percentage >= 0.95) {
                                        return '–í—Ä–∞–∂–∞—é—á–µ! –ú–∞–π–∂–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π –±–∞–ª ‚Äì –≤–∏ –Ω–µ–π–º–æ–≤—ñ—Ä–Ω—ñ! üåü'
                                    } else if (percentage >= 0.9) {
                                        return '–ß—É–¥–æ–≤–æ! –í–∞—à—ñ –∑–Ω–∞–Ω–Ω—è –Ω–∞ –≤–∏—Å–æ–∫–æ–º—É —Ä—ñ–≤–Ω—ñ! üëè'
                                    } else if (percentage >= 0.8) {
                                        return '–í—ñ–¥–º—ñ–Ω–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –í–∏ –¥–æ–±—Ä–µ –≤–æ–ª–æ–¥—ñ—î—Ç–µ –º–∞—Ç–µ—Ä—ñ–∞–ª–æ–º! üëç'
                                    } else if (percentage >= 0.7) {
                                        return '–î–æ–±—Ä–µ –∑—Ä–æ–±–ª–µ–Ω–æ! –í–∏ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É —à–ª—è—Ö—É! üí™'
                                    } else if (percentage >= 0.6) {
                                        return '–ù–µ–ø–æ–≥–∞–Ω–æ! –î–µ—â–æ –±—ñ–ª—å—à–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ ‚Äì —ñ –±—É–¥–µ —ñ–¥–µ–∞–ª—å–Ω–æ! ‚ú®'
                                    } else if (percentage >= 0.5) {
                                        return '–°–µ—Ä–µ–¥–Ω—ñ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –í–∏ –≤–ø–æ—Ä–∞–ª–∏—Å—å, –∞–ª–µ —î –∫—É–¥–∏ —Ä–æ—Å—Ç–∏! üìö'
                                    } else if (percentage >= 0.4) {
                                        return '–í–∏ –∑—Ä–æ–±–∏–ª–∏ –ø–µ—Ä—à—ñ –∫—Ä–æ–∫–∏! –ü—Ä–æ–¥–æ–≤–∂—É–π—Ç–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –Ω–∞–¥ —Å–æ–±–æ—é! üö∂‚Äç‚ôÇÔ∏è'
                                    } else if (percentage >= 0.3) {
                                        return '–ù–µ –∑–¥–∞–≤–∞–π—Ç–µ—Å—å! –ö–æ–∂–Ω–∞ —Å–ø—Ä–æ–±–∞ —Ä–æ–±–∏—Ç—å –≤–∞—Å —Å–∏–ª—å–Ω—ñ—à–∏–º–∏! üí•'
                                    } else if (percentage >= 0.2) {
                                        return '–°–∫–ª–∞–¥–Ω–∏–π —Ç–µ—Å—Ç? –¶–µ –ª–∏—à–µ –ø–æ—á–∞—Ç–æ–∫ –≤–∞—à–æ–≥–æ –Ω–∞–≤—á–∞–Ω–Ω—è! üß†'
                                    } else if (percentage >= 0.1) {
                                        return '–ù–µ –∑–∞—Å–º—É—á—É–π—Ç–µ—Å—å! –ù–∞–≤—ñ—Ç—å –≥–µ–Ω—ñ—ó –∫–æ–ª–æ—Å—å –ø–æ—á–∏–Ω–∞–ª–∏! üå±'
                                    } else {
                                        return '–í–∞–∂–ª–∏–≤–æ –Ω–µ —Ç–µ, —è–∫ –≤–∏ –ø–æ—á–∞–ª–∏, –∞ —Ç–µ, —è–∫ –≤–∏ –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–µ! üèÅ'
                                    }
                                })()}
                            </p>
                            <div className="flex items-center gap-6">
                                <Link
                                    href="/home"
                                    className="border border-gray-400 text-gray-700 px-4 py-2 rounded hover:bg-gray-100 font-medium"
                                >
                                    –í–µ—Ä–Ω—É—Ç–∏—Å—å –Ω–∞ –¥–æ–º–∞—à–Ω—é —Å—Ç–æ—Ä—ñ–Ω–∫—É
                                </Link>
                            </div>
                        </div>
                        <div className="bg-gray-200 border-3 border-red-600 p-4 px-10 w-full">
                            <p className="font-semibold text-[22px]">
                                –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç (–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–µ—Å—Ç–æ–≤–∏—Ö –±–∞–ª—ñ–≤ –∑–∞
                                –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ç–µ—Å—Ç—É —ñ–∑ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –º–æ–∂–ª–∏–≤–∏—Ö )
                            </p>
                            <p className="text-[18px] flex">
                                –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ - {testResult.totalScore}/
                                {testResult.maxScore}
                            </p>
                        </div>
                    </div>
                </div>
            )}
        </div>
    )
}

export default TimeTracker
